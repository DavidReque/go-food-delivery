{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Orders Service Api for order management",
        "title": "Orders Service Api",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "David Requeno",
            "url": "https://github.com/DavidReque",
            "email": "davidrequeno52@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/api/v1/orders": {
            "get": {
                "description": "Get all orders with pagination and filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Get all orders",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "Page size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field to order by",
                        "name": "orderBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Applied filters",
                        "name": "filters",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.GetOrdersResponseDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "description": "Create new order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Create order",
                "parameters": [
                    {
                        "description": "Order data",
                        "name": "CreateOrderRequestDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CreateOrderRequestDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dtos.CreateOrderResponseDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/v1/orders/{id}": {
            "get": {
                "description": "Get order by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Get order by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.GetOrderByIdResponseDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dtos.CreateOrderRequestDto": {
            "description": "DTO to create a new order",
            "type": "object",
            "properties": {
                "accountEmail": {
                    "description": "@Description Email of the user's account\n@Required\n@Pattern ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
                    "type": "string",
                    "example": "user@example.com"
                },
                "deliveryAddress": {
                    "description": "@Description Delivery address\n@Required",
                    "type": "string",
                    "example": "Main Street 123, City"
                },
                "deliveryTime": {
                    "description": "@Description Delivery time in RFC3339 format\n@Required\n@Format date-time",
                    "type": "string"
                },
                "shopItems": {
                    "description": "@Description List of items from the shop\n@Required",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtosV1.ShopItemDto"
                    }
                }
            }
        },
        "dtos.CreateOrderResponseDto": {
            "description": "DTO for response to create orders",
            "type": "object",
            "properties": {
                "Id": {
                    "description": "@Description Unique ID of the created order\n@Required",
                    "type": "string"
                }
            }
        },
        "dtos.GetOrderByIdResponseDto": {
            "description": "DTO for response to get order by id",
            "type": "object",
            "properties": {
                "order": {
                    "description": "@Description Found order",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dtosV1.OrderReadDto"
                        }
                    ]
                }
            }
        },
        "dtos.GetOrdersResponseDto": {
            "description": "DTO for response to get orders with pagination",
            "type": "object",
            "properties": {
                "orders": {
                    "description": "@Description Paginated list of orders",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dtos.OrdersListResult"
                        }
                    ]
                }
            }
        },
        "dtos.OrdersListResult": {
            "description": "Paginated result for orders",
            "type": "object",
            "properties": {
                "items": {
                    "description": "@Description Current page orders",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtosV1.OrderReadDto"
                    }
                },
                "page": {
                    "description": "@Description Current page number",
                    "type": "integer"
                },
                "size": {
                    "description": "@Description Current page size",
                    "type": "integer"
                },
                "totalItems": {
                    "description": "@Description Total available items",
                    "type": "integer"
                },
                "totalPage": {
                    "description": "@Description Total available pages",
                    "type": "integer"
                }
            }
        },
        "dtosV1.OrderReadDto": {
            "description": "DTO for reading orders from the system",
            "type": "object",
            "properties": {
                "accountEmail": {
                    "description": "@Description Email of the user's account",
                    "type": "string"
                },
                "cancelReason": {
                    "description": "@Description Reason for cancellation (if applicable)",
                    "type": "string"
                },
                "canceled": {
                    "description": "@Description Indicates if the order has been cancelled",
                    "type": "boolean"
                },
                "completed": {
                    "description": "@Description Indicates if the order has been completed",
                    "type": "boolean"
                },
                "createdAt": {
                    "description": "@Description Creation date\n@Format date-time",
                    "type": "string"
                },
                "deliveredTime": {
                    "description": "@Description Delivery time\n@Format date-time",
                    "type": "string"
                },
                "deliveryAddress": {
                    "description": "@Description Delivery address",
                    "type": "string"
                },
                "id": {
                    "description": "@Description Unique ID of the order",
                    "type": "string"
                },
                "orderId": {
                    "description": "@Description ID of the order for external reference",
                    "type": "string"
                },
                "paid": {
                    "description": "@Description Indicates if the order has been paid",
                    "type": "boolean"
                },
                "paymentId": {
                    "description": "@Description ID of the associated payment",
                    "type": "string"
                },
                "shopItems": {
                    "description": "@Description List of items from the shop in the order",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtosV1.ShopItemReadDto"
                    }
                },
                "submitted": {
                    "description": "@Description Indicates if the order has been sent",
                    "type": "boolean"
                },
                "totalPrice": {
                    "description": "@Description Total price of the order",
                    "type": "number"
                },
                "updatedAt": {
                    "description": "@Description Last update date\n@Format date-time",
                    "type": "string"
                }
            }
        },
        "dtosV1.ShopItemDto": {
            "description": "DTO for representing an item from the shop in an order",
            "type": "object",
            "properties": {
                "description": {
                    "description": "@Description Description of the product",
                    "type": "string"
                },
                "price": {
                    "description": "@Description Unit price of the product\n@Required\n@Minimum 0",
                    "type": "number"
                },
                "quantity": {
                    "description": "@Description Quantity of the product\n@Required\n@Minimum 1",
                    "type": "integer"
                },
                "title": {
                    "description": "@Description Title of the product\n@Required",
                    "type": "string"
                }
            }
        },
        "dtosV1.ShopItemReadDto": {
            "description": "DTO for reading items from the shop in an order",
            "type": "object",
            "properties": {
                "description": {
                    "description": "@Description Description of the product",
                    "type": "string"
                },
                "price": {
                    "description": "@Description Unit price of the product",
                    "type": "number"
                },
                "quantity": {
                    "description": "@Description Quantity of the product",
                    "type": "integer"
                },
                "title": {
                    "description": "@Description Title of the product",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Enter \"Bearer\" followed by a space and the JWT token",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}